import{_ as s,c as a,e as p,o as t}from"./app-Cqb5tvJn.js";const e={};function c(o,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="输出json" tabindex="-1"><a class="header-anchor" href="#输出json"><span>输出JSON</span></a></h1><ul><li>JSON.stringify(canvas)</li><li>canvas.toJSON()</li><li>canvas.toObject()</li></ul><p><code>{version: &#39;5.3.0&#39;, objects: []}</code></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">canvas</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fabric<span class="token punctuation">.</span>Rect</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;transparent&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  canvas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;canvas stringify &#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;canvas toJSON&#39;</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;canvas toObject&#39;</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span><span class="token function">toObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)]))}const i=s(e,[["render",c]]),u=JSON.parse('{"path":"/fabric/%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E8%BE%93%E5%87%BAJSON.html","title":"输出JSON","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1701683950000,"contributors":[{"name":"wu.hui","username":"","email":"wu.hui@qkupower.com","commits":1}],"changelog":[{"hash":"d5b01aef79f060595dd6ed4a4f7a51cc3f7c39c9","time":1701683950000,"email":"wu.hui@qkupower.com","author":"wu.hui","message":"f"}]},"filePathRelative":"fabric/序列化和反序列化/输出JSON.md"}');export{i as comp,u as data};
