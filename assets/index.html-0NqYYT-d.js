import{_ as t,c as a,e as n,o as r}from"./app-Cqb5tvJn.js";const d={};function s(l,e){return r(),a("div",null,e[0]||(e[0]=[n(`<h1 id="webgl学习" tabindex="-1"><a class="header-anchor" href="#webgl学习"><span>webgl学习</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>float 用 1.0，不要用整数，虽然也可以运行</p></div><h2 id="thebookofshaders-示例" tabindex="-1"><a class="header-anchor" href="#thebookofshaders-示例"><span>thebookofshaders 示例</span></a></h2><p>原文链接：<a href="https://thebookofshaders.com/?lan=ch" target="_blank" rel="noopener noreferrer">thebookofshaders</a><br> thebookofshaders 里面的示例，按章节来，例：03-1</p><ol><li><a href="https://zhuanwan.github.io/blogs/thebookofshadersexample/02-1.html" target="_blank" rel="noopener noreferrer">02-1</a></li><li><a href="https://zhuanwan.github.io/blogs/thebookofshadersexample/02-2.html" target="_blank" rel="noopener noreferrer">02-2</a></li><li><a href="https://zhuanwan.github.io/blogs/thebookofshadersexample/03-1.html" target="_blank" rel="noopener noreferrer">03-1</a></li><li><a href="https://zhuanwan.github.io/blogs/thebookofshadersexample/04-1.html" target="_blank" rel="noopener noreferrer">04-1</a></li><li><a href="https://zhuanwan.github.io/blogs/thebookofshadersexample/05-1.html" target="_blank" rel="noopener noreferrer">05-1</a><br> 其他示例https://github.com/zhuanwan/blogs/tree/gh-pages/thebookofshadersexample</li></ol><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h2><p>https://colin1994.github.io/2017/11/12/OpenGLES-Lesson05/</p><h3 id="角度和三角函数" tabindex="-1"><a class="header-anchor" href="#角度和三角函数"><span>角度和三角函数</span></a></h3><p>函数参数是以弧度为单位的角度值。以下内置函数是按逐个分量进行操作，但按单个分量操作进行描述。</p><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>genType radians (genType degrees)</td><td>将角度转换为弧度</td></tr><tr><td>genType degrees (genType radians)</td><td>将弧度转换为角度</td></tr><tr><td>genType sin (genType angle)</td><td>标准三角正弦函数</td></tr><tr><td>genType cos (genType angle)</td><td>标准的三角余弦函数</td></tr><tr><td>genType tan (genType angle)</td><td>标准的三角正切</td></tr><tr><td>genType asin (genType x)</td><td>正弦。返回正弦为x的角度。该函数返回的值范围为[-π/2，π/2]。如果∣x∣ &gt; 1则返回undefined</td></tr><tr><td>genType acos (genType x)</td><td>反余弦。返回一个余弦为x的角度。这个函数返回的值范围是[0，π] 。如果∣x∣ &gt; 1则返回undefined</td></tr><tr><td>genType atan (genType y, genType x)</td><td>弧形切线。返回一个切线为y/x的角度。X和Y的符号用于确定角度所在的象限。该函数返回的值范围为[−π,π]，如果x===y===0 则返回undefined</td></tr><tr><td>genType atan (genType y_over_x)</td><td>弧形切线。返回一个角度，其切线为y_over_x。该函数返回的值范围为[-π/2，π/2]</td></tr></tbody></table><h3 id="指数函数" tabindex="-1"><a class="header-anchor" href="#指数函数"><span>指数函数</span></a></h3><p>以下内置函数是按逐个分量进行操作，但按单个分量操作进行描述。</p><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>genType pow (genType x, genType y)</td><td>返回x的y次方。如果x &lt; 0，返回undefined。如果x = 0且y &lt;= 0，返回undefined</td></tr><tr><td>genType exp (genType x)</td><td>返回x的自然指数</td></tr><tr><td>genType log (genType x)</td><td>返回x的自然对数。如果x &lt;= 0，返回undefined</td></tr><tr><td>genType exp2 (genType x)</td><td>返回2的x次方</td></tr><tr><td>genType log2 (genType x)</td><td>返回以2为底x的对数。如果x &lt;= 0，返回undefined</td></tr><tr><td>genType sqrt (genType x)</td><td>返回x的平方根。如果x &lt; 0，返回undefined</td></tr><tr><td>genType inversesqrt (genType x)</td><td>返回1/sqrt（x）。结果如果x &lt;= 0，返回undefined</td></tr></tbody></table><h3 id="通用函数" tabindex="-1"><a class="header-anchor" href="#通用函数"><span>通用函数</span></a></h3><p>以下内置函数是按逐个分量进行操作，但按单个分量操作进行描述。</p><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>genType abs (genType x)</td><td>返回x的绝对值</td></tr><tr><td>genType sign (genType x)</td><td>如果x &gt; 0返回1.0，如果x = 0返回0.0，如果x &lt; 0返回-1.0</td></tr><tr><td>genType floor (genType x)</td><td>返回一个值，该值等于小于或等于x的最近整数</td></tr><tr><td>genType ceil (genType x)</td><td>返回一个值，该值等于最近的大于或等于x的整数</td></tr><tr><td>genType fract (genType x)</td><td>返回 x – floor (x)</td></tr><tr><td>genType mod (genType x, float y)</td><td>Modulus (modulo). Returns x – y ∗ floor (x/y)</td></tr><tr><td>genType min (genType x, genType y)genType min (genType x, float y)</td><td>返回xy中的最小值</td></tr><tr><td>genType max (genType x, genType y) genType max (genType x, float y)</td><td>返回xy中的最大值</td></tr><tr><td>genType clamp (genType x,genType minVal, genType maxVal)genType clamp (genType x, float minVal,float maxVal)</td><td>返回 min (max (x, minVal), maxVal)，如果minVal &gt; maxVal 返回undefined</td></tr><tr><td>genType mix (genType x,genType y,genType a)genType mix (genType x,genType y, float a)</td><td>返回x和y的线性混合:x(1-a)+ya</td></tr><tr><td>genType step (genType edge, genType x)genType step (float edge, genType x)</td><td>if x &lt; edge 返回0.0，否则返回1.0</td></tr><tr><td>genType smoothstep (genType edge0,genType edge1,genType x)genType smoothstep (float edge0,float edge1,genType x)</td><td>有些出入，看这个https://zhuanlan.zhihu.com/p/157758600</td></tr></tbody></table><h3 id="几何函数" tabindex="-1"><a class="header-anchor" href="#几何函数"><span>几何函数</span></a></h3><p>以下内置函数是按逐个分量进行操作，但按单个分量操作进行描述。</p><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>float length (genType x)</td><td>返回向量x的长度</td></tr><tr><td>float distance (genType p0, genType p1)</td><td>返回p0和p1之间的距离</td></tr><tr><td>float dot (genType x, genType y)</td><td>返回x和y的点积</td></tr><tr><td>vec3 cross (vec3 x, vec3 y)</td><td>返回x和y的叉乘</td></tr><tr><td>genType normalize (genType x)</td><td>返回与x相同方向的向量，但长度为1</td></tr><tr><td>genType faceforward(genType N,genType I,genType Nref)</td><td>If dot(Nref, I) &lt; 0 return N, otherwise return –N</td></tr><tr><td>genType reflect (genType I, genType N)</td><td>For the incident vector I and surface orientation N,returns the reflection direction: I – 2 ∗ dot(N, I) ∗ N. N must already be normalized in order to achieve the desired result.</td></tr><tr><td>genType refract(genType I, genType N,float eta)</td><td>For the incident vector I and surface normal N, and the ratio of indices of refraction eta, return the refraction vector. The result is computed by k = 1.0 - eta * eta * (1.0 - dot(N, I) * dot(N, I)); if (k &lt; 0.0) return genType(0.0) else return eta * I - (eta * dot(N, I) + sqrt(k)) * N. The input parameters for the incident vector I and thesurface normal N must already be normalized to get the desired results.</td></tr></tbody></table><h3 id="矩阵函数" tabindex="-1"><a class="header-anchor" href="#矩阵函数"><span>矩阵函数</span></a></h3><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>mat matrixCompMult (mat x, mat y)</td><td>Multiply matrix x by matrix y component-wise, i.e.,result[i][j] is the scalar product of x[i][j] and y[i][j]. Note: to get linear algebraic matrix multiplication, usethe multiply operator (*).</td></tr></tbody></table><h2 id="webgl-图元类型" tabindex="-1"><a class="header-anchor" href="#webgl-图元类型"><span>webgl 图元类型</span></a></h2><ul><li>gl.POINTS(点)</li><li>gl.LINES(线段)</li><li>gl.LINE_STRIP(线条)</li><li>gl.LINE_LOOP(回路)</li><li>gl.TRIANGLES(三角形)</li><li>gl.TRIANGLE_STRIP(三角带)</li><li>gl.TRIANGLE_FAN(三角扇)</li></ul><ol><li>gl.TRIANGLES：用来绘制相互独立的三角形。从缓冲区中每次获取3个顶点的数据作为一个三角形。</li><li>gl.TRIANGLE_STRIP：用来绘制有共享边的三角形。从第二个三角形开始，每次读取一个顶点，并利用前面的末尾两个顶点构成一个三角形，以此类推。</li><li>gl.TRIANGLES_FAN：同样用来绘制有共享边的三角形。从第二个三角形开始，每次读取一个顶点，并利用首个顶点和之前最后一个顶点来构成一个三角形，以此类推。</li></ol><h2 id="纹理坐标、webgl坐标" tabindex="-1"><a class="header-anchor" href="#纹理坐标、webgl坐标"><span>纹理坐标、webgl坐标</span></a></h2><h2 id="向量" tabindex="-1"><a class="header-anchor" href="#向量"><span>向量</span></a></h2><h3 id="向量的点乘" tabindex="-1"><a class="header-anchor" href="#向量的点乘"><span>向量的点乘</span></a></h3><p>a、b 向量点积的几何含义，是 a 向量乘以 b 向量在 a 向量上的投影分量</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">|</span>a • b<span class="token operator">|</span> <span class="token operator">=</span> <span class="token operator">|</span>a<span class="token operator">||</span>b<span class="token operator">|</span><span class="token operator">*</span><span class="token function">cos</span><span class="token punctuation">(</span>x°<span class="token punctuation">)</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1、垂直 a.x * b.x + a.y * b.y === 0 2、平行 a.x * b.x + a.y * b.y === a.length * b.length</p><h3 id="向量的叉乘" tabindex="-1"><a class="header-anchor" href="#向量的叉乘"><span>向量的叉乘</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">|</span>a <span class="token constant">X</span> b<span class="token operator">|</span> <span class="token operator">=</span> <span class="token operator">|</span>a<span class="token operator">||</span>b<span class="token operator">|</span><span class="token operator">*</span><span class="token function">sin</span><span class="token punctuation">(</span>x°<span class="token punctuation">)</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>x1*y2 - x2 * y1</p><h3 id="其他工具" tabindex="-1"><a class="header-anchor" href="#其他工具"><span>其他工具</span></a></h3><p>https://desmos.s3.amazonaws.com/Desmos_User_Guide_ZH-CN.pdf</p>`,35)]))}const p=t(d,[["render",s]]),i=JSON.parse('{"path":"/webgl/","title":"webgl学习","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"thebookofshaders 示例","slug":"thebookofshaders-示例","link":"#thebookofshaders-示例","children":[]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[{"level":3,"title":"角度和三角函数","slug":"角度和三角函数","link":"#角度和三角函数","children":[]},{"level":3,"title":"指数函数","slug":"指数函数","link":"#指数函数","children":[]},{"level":3,"title":"通用函数","slug":"通用函数","link":"#通用函数","children":[]},{"level":3,"title":"几何函数","slug":"几何函数","link":"#几何函数","children":[]},{"level":3,"title":"矩阵函数","slug":"矩阵函数","link":"#矩阵函数","children":[]}]},{"level":2,"title":"webgl 图元类型","slug":"webgl-图元类型","link":"#webgl-图元类型","children":[]},{"level":2,"title":"纹理坐标、webgl坐标","slug":"纹理坐标、webgl坐标","link":"#纹理坐标、webgl坐标","children":[]},{"level":2,"title":"向量","slug":"向量","link":"#向量","children":[{"level":3,"title":"向量的点乘","slug":"向量的点乘","link":"#向量的点乘","children":[]},{"level":3,"title":"向量的叉乘","slug":"向量的叉乘","link":"#向量的叉乘","children":[]},{"level":3,"title":"其他工具","slug":"其他工具","link":"#其他工具","children":[]}]}],"git":{"updatedTime":1739413621000,"contributors":[{"name":"wu.hui","username":"","email":"wu.hui@qkupower.com","commits":5}],"changelog":[{"hash":"6ee210c5b668db8f8173ef5e40ec4bf3b6c5c0be","time":1739413621000,"email":"wu.hui@qkupower.com","author":"wu.hui","message":"ff"},{"hash":"9ad0a41011d9ae8607648dd354ef341cfe6adf29","time":1739413425000,"email":"wu.hui@qkupower.com","author":"wu.hui","message":"tt"},{"hash":"0022e14036e3547acaa2776da96e28ab174839d3","time":1660197555000,"email":"wu.hui@qkupower.com","author":"wu.hui","message":"feat: webgl"},{"hash":"892472eb058bbb55f37e0c50d56ed83c0098a5ae","time":1658916492000,"email":"wu.hui@qkupower.com","author":"wu.hui","message":"feat: glsl学习"},{"hash":"c5c608be88e2a261eac0bd921b3bfa11def28ee4","time":1658734153000,"email":"wu.hui@qkupower.com","author":"wu.hui","message":"feat: cs"}]},"filePathRelative":"webgl/README.md"}');export{p as comp,i as data};
