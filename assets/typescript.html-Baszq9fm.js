import{_ as n,c as a,e,o as t}from"./app-Cqb5tvJn.js";const l={};function p(i,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="typescript" tabindex="-1"><a class="header-anchor" href="#typescript"><span>typescript</span></a></h1><ol><li>Exclude&lt;T, U&gt;，T有，U没有</li></ol><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx"><pre><code><span class="line"><span class="token keyword">type</span> <span class="token class-name">ResT</span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span><span class="token operator">|</span><span class="token string">&quot;b&quot;</span><span class="token operator">|</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token operator">|</span><span class="token string">&quot;d&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token comment">// ResT = &quot;a&quot;|&quot;b&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Extract&lt;T, U&gt;，T、U交集</li></ol><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx"><pre><code><span class="line"><span class="token keyword">type</span> <span class="token class-name">ResT</span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span><span class="token operator">|</span><span class="token string">&quot;b&quot;</span><span class="token operator">|</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token operator">|</span><span class="token string">&quot;d&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token comment">// ResT = &quot;c&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Pick&lt;T, K&gt;，从T中取出K</li></ol><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx"><pre><code><span class="line">ExampleTyle <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  lable<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  id<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">const</span> ResT <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>ExampleTyle<span class="token punctuation">,</span> <span class="token string">&#39;lable&#39;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token comment">// ResT = {label: string}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>Omit&lt;T, K&gt;，从T中去除K</li></ol><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx"><pre><code><span class="line">ExampleTyle <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  id<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  lable<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  name<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">const</span> ResT <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>ExampleTyle<span class="token punctuation">,</span> <span class="token string">&#39;lable&#39;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token comment">// ResT = {</span></span>
<span class="line"><span class="token comment">//   id: string</span></span>
<span class="line"><span class="token comment">//   name: string</span></span>
<span class="line"><span class="token comment">// }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)]))}const c=n(l,[["render",p]]),r=JSON.parse('{"path":"/tools/typescript.html","title":"typescript","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1628756554000,"contributors":[{"name":"wuhui","username":"wuhui","email":"maniwu@aijiatui.com","commits":1,"url":"https://github.com/wuhui"}],"changelog":[{"hash":"d26e4a13cfeb6929ab0592e823d92e4a930fc261","time":1628756554000,"email":"maniwu@aijiatui.com","author":"wuhui","message":"up"}]},"filePathRelative":"tools/typescript.md"}');export{c as comp,r as data};
