import{_ as s,c as a,e as p,o as t}from"./app-Cqb5tvJn.js";const e="/blogs/images/20210526-1.png",c="/blogs/images/20210526-3.jpeg",l={};function i(o,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="树和对象转换" tabindex="-1"><a class="header-anchor" href="#树和对象转换"><span>树和对象转换</span></a></h1><p>给定一棵树</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">const tree <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    title: <span class="token string">&#39;1&#39;</span>,</span>
<span class="line">    id: <span class="token string">&#39;1&#39;</span>,</span>
<span class="line">    children: <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        title: <span class="token string">&#39;2-1&#39;</span>,</span>
<span class="line">        id: <span class="token string">&#39;2-1&#39;</span>,</span>
<span class="line">        children: <span class="token punctuation">[</span></span>
<span class="line">          <span class="token punctuation">{</span></span>
<span class="line">            title: <span class="token string">&#39;2-1-1&#39;</span>,</span>
<span class="line">            id: <span class="token string">&#39;2-1-1&#39;</span>,</span>
<span class="line">          <span class="token punctuation">}</span>,</span>
<span class="line">        <span class="token punctuation">]</span>,</span>
<span class="line">      <span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        title: <span class="token string">&#39;2-2&#39;</span>,</span>
<span class="line">        id: <span class="token string">&#39;2-2&#39;</span>,</span>
<span class="line">      <span class="token punctuation">}</span>,</span>
<span class="line">    <span class="token punctuation">]</span>,</span>
<span class="line">  <span class="token punctuation">}</span>,</span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="树转一维数组" tabindex="-1"><a class="header-anchor" href="#树转一维数组"><span>树转一维数组</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">treeTransArray</span><span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> parentId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> tree<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> <span class="token punctuation">{</span> children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span>item <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span>
<span class="line">      arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token operator">...</span>item<span class="token punctuation">,</span> parentId <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">treeTransArray</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> item<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">treeTransArray</span><span class="token punctuation">(</span>tree<span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+e+`" alt="树转一维数组" title="树转一维数组"></p><h2 id="一维数组转树" tabindex="-1"><a class="header-anchor" href="#一维数组转树"><span>一维数组转树</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">arrayTransTree</span><span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> tree <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">parent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> branchArr <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">child</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> parent<span class="token punctuation">.</span>id <span class="token operator">===</span> child<span class="token punctuation">[</span>key<span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    parent<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>branchArr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      parent<span class="token punctuation">.</span>children <span class="token operator">=</span> branchArr</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">const</span> flag <span class="token operator">=</span> parent<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;0&#39;</span></span>
<span class="line">    <span class="token keyword">return</span> flag</span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span> tree</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">treeTransArray</span><span class="token punctuation">(</span>tree<span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">arrayTransTree</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token string">&#39;parentId&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="树转对象" tabindex="-1"><a class="header-anchor" href="#树转对象"><span>树转对象</span></a></h2><p>查找父类包括自己所在的对象</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">makeRevMap</span><span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> parents</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    result<span class="token punctuation">[</span>item<span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> parents<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span></span>
<span class="line">      item<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span></span>
<span class="line">      Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span></span>
<span class="line">      item<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      result <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>result<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token function">makeRevMap</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">,</span> result<span class="token punctuation">[</span>item<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> result</span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">makeRevMap</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+c+`" alt="树转对象" title="树转对象"></p><h2 id="树平铺" tabindex="-1"><a class="header-anchor" href="#树平铺"><span>树平铺</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">  <span class="token keyword">function</span> <span class="token function">treeToList</span><span class="token punctuation">(</span><span class="token parameter">treeRoot</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> tmpArr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      tree<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">element</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> childArr <span class="token operator">=</span> tmpArr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> element<span class="token punctuation">.</span>title <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">loop</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>children<span class="token punctuation">,</span> childArr<span class="token punctuation">,</span> arr<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">          arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>childArr<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token function">loop</span><span class="token punctuation">(</span>treeRoot<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> arr</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">treeToList</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14)]))}const r=s(l,[["render",i]]),k=JSON.parse(`{"path":"/algorithm/%E6%A0%91%E5%92%8C%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2.html","title":"树和对象转换","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"树转一维数组","slug":"树转一维数组","link":"#树转一维数组","children":[]},{"level":2,"title":"一维数组转树","slug":"一维数组转树","link":"#一维数组转树","children":[]},{"level":2,"title":"树转对象","slug":"树转对象","link":"#树转对象","children":[]},{"level":2,"title":"树平铺","slug":"树平铺","link":"#树平铺","children":[]}],"git":{"updatedTime":1745399284000,"contributors":[{"name":"wuhui","username":"wuhui","email":"maniwu@aijiatui.com","commits":3,"url":"https://github.com/wuhui"},{"name":"wu.hui","username":"","email":"wu.hui@qkupower.com","commits":3}],"changelog":[{"hash":"ad7ae4531a0219c31c66c42bc023f7c199305c73","time":1745399284000,"email":"wu.hui@qkupower.com","author":"wu.hui","message":"feat: up"},{"hash":"80d32f6ffb0e9486f5400fa1c2dcab689f8a390f","time":1663645879000,"email":"wu.hui@qkupower.com","author":"wu.hui","message":"feat: 图片"},{"hash":"ec8b66643ce7f9a3c2702b3ef8107912a38ab499","time":1663639462000,"email":"wu.hui@qkupower.com","author":"wu.hui","message":"feat: 文件目录"},{"hash":"22549e7953a41909f4b84da9c0fc81e3df7a1ca8","time":1622022772000,"email":"maniwu@aijiatui.com","author":"wuhui","message":"up"},{"hash":"af22270fcd5d3c9525f462ee3a181e9565656f65","time":1621845350000,"email":"maniwu@aijiatui.com","author":"wuhui","message":"up"},{"hash":"5fafa6ac292815abdc92a2142d4000bf12327a7e","time":1619425497000,"email":"maniwu@aijiatui.com","author":"wuhui","message":"u'p"}]},"filePathRelative":"algorithm/树和对象转换.md"}`);export{r as comp,k as data};
