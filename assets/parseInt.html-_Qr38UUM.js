import{_ as s,c as n,e as t,o as p}from"./app-Cqb5tvJn.js";const e={};function i(o,a){return p(),n("div",null,a[0]||(a[0]=[t(`<h1 id="parseint" tabindex="-1"><a class="header-anchor" href="#parseint"><span>parseInt</span></a></h1><p>parseInt(string, radix) 解析一个字符串并返回指定基数的十进制整数，<br> radix 是2-36之间的整数，表示被解析字符串的基数。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;6&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;7&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;8&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;9&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;12&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;13&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;14&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;15&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;16&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>parseInt<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// [1, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, 9, 11, 13, 15, 17, 19, 21]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>parseInt(&#39;1&#39;, 0) = 1 // 第二个参数是0，默认十进制</li><li>parseInt(&#39;2&#39;, 1) = NaN // 第二个参数不在2-36内</li><li>parseInt(&#39;3&#39;, 2) = NaN // 3 &gt; 2, 不能进制</li><li>parseInt(&#39;4&#39;, 3) = NaN // 4不能3进制</li><li>parseInt(&#39;5&#39;, 4) = NaN // 5不能4进制</li><li>parseInt(&#39;6&#39;, 5) = NaN // 6不能5进制</li><li>parseInt(&#39;7&#39;, 6) = NaN // 7不能6进制</li><li>parseInt(&#39;8&#39;, 7) = NaN // 8不能7进制</li><li>parseInt(&#39;9&#39;, 8) = NaN // 9不能8进制</li><li>parseInt(&#39;10&#39;, 9) = 9 // 0*1 + 1*9</li><li>parseInt(&#39;11&#39;, 10) = 11 // 1*1 + 1*10</li><li>parseInt(&#39;12&#39;, 11) = 13 // 2*1 + 1*11</li><li>arseInt(&#39;13&#39;, 12) = 15 // 3*1 + 1*12</li><li>parseInt(&#39;14&#39;, 13) = 17 // 4*1 + 1*13</li><li>parseInt(&#39;15&#39;, 14) = 19 // 5*1 + 1*14</li><li>parseInt(&#39;16&#39;, 15) = 21 // 6*1 + 1*15</li><li>parseInt(&#39;28&#39;, 6) = 2</li></ul><p><strong>总结，第一个参数单个字符 要小于 第二个参数(进制) 才能继续解析，否则只解析能解析的并返回</strong></p>`,5)]))}const l=s(e,[["render",i]]),c=JSON.parse('{"path":"/jsBlock/parseInt.html","title":"parseInt","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1622022772000,"contributors":[{"name":"wuhui","username":"wuhui","email":"maniwu@aijiatui.com","commits":3,"url":"https://github.com/wuhui"}],"changelog":[{"hash":"22549e7953a41909f4b84da9c0fc81e3df7a1ca8","time":1622022772000,"email":"maniwu@aijiatui.com","author":"wuhui","message":"up"},{"hash":"d73571b932773a76dcd51987be4134eac5505576","time":1607503723000,"email":"maniwu@aijiatui.com","author":"wuhui","message":"up"},{"hash":"b2c0a1d53e018bfad100d4f859850e4e056d025c","time":1598861918000,"email":"maniwu@aijiatui.com","author":"wuhui","message":"up"}]},"filePathRelative":"jsBlock/parseInt.md"}');export{l as comp,c as data};
